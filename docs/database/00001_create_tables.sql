CREATE TABLE "user" (
    user_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE genre (
    genre_id SMALLINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    genre_name TEXT NOT NULL UNIQUE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE series (
    series_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    title TEXT NOT NULL,
    description TEXT,
    release_date DATE NOT NULL,
    thumbnail_s3_key TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE video (
    video_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    series_id BIGINT,
    season_number INTEGER,
    episode_number INTEGER,
    title TEXT NOT NULL,
    description TEXT,
    type TEXT NOT NULL CHECK (type IN ('movie', 'episode', 'series')),
    release_date DATE NOT NULL,
    thumbnail_s3_key TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_series FOREIGN KEY (series_id) REFERENCES series(series_id) ON DELETE SET NULL
);

CREATE TABLE video_genre (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    video_id BIGINT NOT NULL,
    genre_id SMALLINT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_video FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE,
    CONSTRAINT fk_genre FOREIGN KEY (genre_id) REFERENCES genre(genre_id) ON DELETE RESTRICT,
    CONSTRAINT unique_video_genre UNIQUE (video_id, genre_id)
);

CREATE TABLE series_genre (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    series_id BIGINT NOT NULL,
    genre_id SMALLINT NOT NULL,
    CONSTRAINT fk_series FOREIGN KEY (series_id) REFERENCES series(series_id) ON DELETE CASCADE,
    CONSTRAINT fk_genre FOREIGN KEY (genre_id) REFERENCES genre(genre_id) ON DELETE RESTRICT,
    CONSTRAINT unique_series_genre UNIQUE (series_id, genre_id)
);

CREATE TABLE media_asset (
    asset_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    video_id BIGINT NOT NULL,
    asset_type TEXT NOT NULL CHECK (asset_type IN ('video', 'trailer')),
    s3_key TEXT NOT NULL,
    quality TEXT NOT NULL CHECK (quality IN ('720p', '1080p', '4K')),
    format TEXT NOT NULL CHECK (format IN ('mp4', 'webm', 'vtt')),
    size_mb DECIMAL NOT NULL CHECK (size_mb >= 0),
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_video FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE
);

CREATE TABLE actor (
    actor_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    name TEXT NOT NULL,
    birth_date DATE,
    bio TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE video_actor (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    video_id BIGINT NOT NULL,
    actor_id INTEGER NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_video FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE,
    CONSTRAINT fk_actor FOREIGN KEY (actor_id) REFERENCES actor(actor_id) ON DELETE RESTRICT,
    CONSTRAINT unique_video_actor UNIQUE (video_id, actor_id)
);

CREATE TABLE like (
    like_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id BIGINT NOT NULL,
    video_id BIGINT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES "user"(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_video FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE,
    CONSTRAINT unique_like UNIQUE (user_id, video_id)
);

CREATE TABLE comment (
    comment_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id BIGINT NOT NULL,
    video_id BIGINT NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES "user"(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_video FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE
);


CREATE TABLE rating (
    rating_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id BIGINT NOT NULL,
    video_id BIGINT NOT NULL,
    rating SMALLINT NOT NULL CHECK (rating BETWEEN 1 AND 10),
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES "user"(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_video FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE,
    CONSTRAINT unique_rating UNIQUE (user_id, video_id)
);


CREATE TABLE saved_video (
    saved_id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id BIGINT NOT NULL,
    video_id BIGINT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES "user"(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_video FOREIGN KEY (video_id) REFERENCES video(video_id) ON DELETE CASCADE,
    CONSTRAINT unique_saved UNIQUE (user_id, video_id)
);

